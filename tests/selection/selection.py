"""
###########parameters###########
dataset: dataset2.txt
Generation depth: 3
Population Size : 500
Maximum Iterations : 1000
Selection Type : tournament & select best 2
tournament size : 50
Crossover rate : 0.5
Mutation Rate : 0.99
Testing Threshold : 0.5

################################
"""
import matplotlib.pyplot as plt
import numpy as np
tr01 = [0.723214285714, 0.690714285714, 0.686071428571, 0.696428571429, 0.73928571429, 0.705357142857, 0.705357142857, 0.642857142857, 0.6875, 0.660714285714,
0.714285714286, 0.723214285714, 0.751785714286, 0.75, 0.75, 0.714285714286, 0.678571428571, 0.660714285714, 0.732142857143, 0.696428571429,
0.651785714286, 0.678571428571, 0.714285714286, 0.723214285714, 0.6875, 0.714285714286, 0.714285714286, 0.669642857143, 0.571428571429, 0.680714285714,
0.660714285714, 0.75, 0.673928571429, 0.6875, 0.669642857143, 0.732142857143, 0.714285714286, 0.714285714286, 0.696428571429, 0.678571428571,
0.723214285714, 0.660714285714, 0.732142857143, 0.698571428571, 0.698571428571, 0.723214285714, 0.767857142857, 0.769642857143, 0.705357142857, 0.714285714286]


tr02 = [0.523214285714, 0.651785714286, 0.605357142857, 0.660714285714, 0.696428571429, 0.6875, 0.642857142857, 0.65, 0.658928571429, 0.732142857143,
0.6875, 0.660714285714, 0.696428571429, 0.65, 0.678571428571, 0.6875, 0.732142857143, 0.6875, 0.723214285714, 0.732142857143,
0.660714285714, 0.660714285714, 0.6875, 0.651785714286, 0.660714285714, 0.723214285714, 0.73, 0.714285714286, 0.660714285714, 0.678571428571,
0.589285714286, 0.651785714286, 0.705357142857, 0.669642857143, 0.651785714286, 0.616071428571, 0.705357142857, 0.696428571429, 0.75, 0.707857142857,
0.669642857143, 0.633928571429, 0.723214285714, 0.678571428571, 0.608928571429, 0.732142857143, 0.642857142857, 0.732142857143, 0.714285714286, 0.642857142857]



# m1 = np.mean(tr01)
# m2 = np.mean(tr02)



labels = ["Tournament,", "Select Best"]
plt.boxplot([tr01,tr02], labels=labels)
# plt.plot([1,2], [m1,m2])
plt.title("Box plot to show predictive accuracies with different selection mechanisms")
plt.xlabel("Types of Selection")
plt.ylabel("Predictive Accuracy")

plt.show()

