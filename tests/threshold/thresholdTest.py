"""
###########parameters###########
dataset: dataset2.txt
Generation depth: 3
Population Size : 500
Maximum Iterations : 5
Selection Type : tournament
tournament size : 50
Crossover rate : 0.5
Mutation Rate : 0.99
Testing Threshold : 0.1-0.9

Graph shows that 0.5 has the smallest range of values, smallest IQR, smallest varience and st dev. 
################################
"""
import matplotlib.pyplot as plt
import numpy as np
import math
tr01 = [0.625, 0.633928571429, 0.5625, 0.607142857143, 0.616071428571, 0.571428571429, 0.464285714286, 0.553571428571, 0.508928571429, 0.625,
0.571428571429, 0.723214285714, 0.696428571429, 0.508928571429, 0.517857142857, 0.616071428571, 0.401785714286, 0.553571428571, 0.517857142857, 0.383928571429,
0.535714285714, 0.5, 0.553571428571, 0.571428571429, 0.5625, 0.535714285714, 0.767857142857, 0.535714285714, 0.535714285714, 0.669642857143,
0.517857142857, 0.508928571429, 0.473214285714, 0.464285714286, 0.678571428571, 0.553571428571, 0.75, 0.508928571429, 0.473214285714, 0.526785714286,
0.419642857143, 0.589285714286, 0.616071428571, 0.580357142857, 0.758928571429, 0.482142857143, 0.571428571429, 0.482142857143, 0.660714285714, 0.776785714286]


tr02 = [0.651785714286, 0.723214285714, 0.732142857143, 0.446428571429, 0.75, 0.607142857143, 0.714285714286, 0.553571428571, 0.526785714286, 0.589285714286,
0.401785714286, 0.616071428571, 0.651785714286, 0.553571428571, 0.633928571429, 0.5, 0.508928571429, 0.598214285714, 0.678571428571, 0.571428571429,
0.607142857143, 0.660714285714, 0.4375, 0.517857142857, 0.526785714286, 0.6875, 0.633928571429, 0.553571428571, 0.678571428571, 0.660714285714,
0.642857142857, 0.776785714286, 0.517857142857, 0.473214285714, 0.5625, 0.383928571429, 0.535714285714, 0.651785714286, 0.571428571429, 0.598214285714,
0.5625, 0.696428571429, 0.678571428571, 0.526785714286, 0.473214285714, 0.5625, 0.660714285714, 0.553571428571, 0.75, 0.633928571429]

tr03= [0.571428571429, 0.553571428571, 0.651785714286, 0.633928571429, 0.5625, 0.651785714286, 0.696428571429, 0.6875, 0.6875, 0.633928571429,
0.571428571429, 0.651785714286, 0.544642857143, 0.589285714286, 0.464285714286, 0.616071428571, 0.526785714286, 0.678571428571, 0.678571428571, 0.6875,
0.696428571429, 0.633928571429, 0.758928571429, 0.696428571429, 0.705357142857, 0.491071428571, 0.723214285714, 0.633928571429, 0.455357142857, 0.383928571429,
0.723214285714, 0.705357142857, 0.5625, 0.535714285714, 0.580357142857, 0.660714285714, 0.660714285714, 0.75, 0.660714285714, 0.651785714286,
0.607142857143, 0.544642857143, 0.678571428571, 0.464285714286, 0.705357142857, 0.6875, 0.6875, 0.732142857143, 0.714285714286, 0.633928571429]

tr04 = [0.517857142857, 0.723214285714, 0.6875, 0.473214285714, 0.571428571429, 0.723214285714, 0.517857142857, 0.678571428571, 0.6875, 0.517857142857,
0.705357142857, 0.508928571429, 0.714285714286, 0.705357142857, 0.571428571429, 0.633928571429, 0.678571428571, 0.678571428571, 0.705357142857, 0.642857142857,
0.741071428571, 0.696428571429, 0.669642857143, 0.6875, 0.607142857143, 0.633928571429, 0.830357142857, 0.616071428571, 0.669642857143, 0.678571428571,
0.678571428571, 0.589285714286, 0.678571428571, 0.696428571429, 0.651785714286, 0.651785714286, 0.553571428571, 0.616071428571, 0.723214285714, 0.598214285714,
0.651785714286, 0.482142857143, 0.491071428571, 0.678571428571, 0.491071428571, 0.678571428571, 0.589285714286, 0.5625, 0.767857142857, 0.491071428571]

tr05 = [0.660714285714, 0.642857142857, 0.714285714286, 0.6875, 0.678571428571, 0.607142857143, 0.669642857143, 0.714285714286, 0.660714285714, 0.732142857143,
0.696428571429, 0.669642857143, 0.642857142857, 0.607142857143, 0.669642857143, 0.732142857143, 0.625, 0.741071428571, 0.785714285714, 0.642857142857,
0.678571428571, 0.616071428571, 0.758928571429, 0.642857142857, 0.651785714286, 0.767857142857, 0.723214285714, 0.696428571429, 0.767857142857, 0.714285714286,
0.678571428571, 0.741071428571, 0.642857142857, 0.75, 0.705357142857, 0.723214285714, 0.732142857143, 0.651785714286, 0.732142857143, 0.723214285714,
0.705357142857, 0.741071428571, 0.625, 0.678571428571, 0.6875, 0.741071428571, 0.642857142857, 0.633928571429, 0.651785714286, 0.669642857143]

tr06 = [0.660714285714, 0.553571428571, 0.6875, 0.616071428571, 0.633928571429, 0.723214285714, 0.741071428571, 0.660714285714, 0.741071428571, 0.6875,
0.642857142857, 0.678571428571, 0.669642857143, 0.5625, 0.651785714286, 0.607142857143, 0.714285714286, 0.660714285714, 0.625, 0.723214285714,
0.669642857143, 0.633928571429, 0.669642857143, 0.669642857143, 0.723214285714, 0.696428571429, 0.616071428571, 0.705357142857, 0.75, 0.589285714286,
0.75, 0.660714285714, 0.696428571429, 0.732142857143, 0.651785714286, 0.5625, 0.741071428571, 0.678571428571, 0.696428571429, 0.696428571429,
0.696428571429, 0.625, 0.678571428571, 0.6875, 0.6875, 0.642857142857, 0.642857142857, 0.616071428571, 0.6875, 0.669642857143]

tr07 = [0.517857142857, 0.607142857143, 0.642857142857, 0.660714285714, 0.705357142857, 0.705357142857, 0.696428571429, 0.571428571429, 0.553571428571, 0.678571428571,
0.732142857143, 0.669642857143, 0.642857142857, 0.714285714286, 0.589285714286, 0.696428571429, 0.651785714286, 0.642857142857, 0.6875, 0.598214285714,
0.669642857143, 0.678571428571, 0.598214285714, 0.758928571429, 0.758928571429, 0.633928571429, 0.5625, 0.5625, 0.526785714286, 0.571428571429,
0.625, 0.5625, 0.8125, 0.723214285714, 0.705357142857, 0.607142857143, 0.616071428571, 0.651785714286, 0.767857142857, 0.696428571429,
0.642857142857, 0.616071428571, 0.607142857143, 0.553571428571, 0.625, 0.669642857143, 0.660714285714, 0.535714285714, 0.616071428571, 0.571428571429]

tr08 = [0.544642857143, 0.633928571429, 0.633928571429, 0.660714285714, 0.678571428571, 0.491071428571, 0.535714285714, 0.6875, 0.544642857143, 0.651785714286,
0.616071428571, 0.616071428571, 0.678571428571, 0.598214285714, 0.508928571429, 0.660714285714, 0.5625, 0.535714285714, 0.696428571429, 0.589285714286,
0.535714285714, 0.571428571429, 0.607142857143, 0.607142857143, 0.642857142857, 0.491071428571, 0.580357142857, 0.544642857143, 0.491071428571, 0.705357142857,
0.571428571429, 0.678571428571, 0.669642857143, 0.732142857143, 0.571428571429, 0.696428571429, 0.589285714286, 0.535714285714, 0.651785714286, 0.589285714286,
0.508928571429, 0.678571428571, 0.571428571429, 0.642857142857, 0.473214285714, 0.678571428571, 0.553571428571, 0.517857142857, 0.616071428571, 0.544642857143]

tr09 = [0.571428571429, 0.696428571429, 0.517857142857, 0.473214285714, 0.705357142857, 0.5, 0.678571428571, 0.616071428571, 0.571428571429, 0.642857142857,
0.651785714286, 0.535714285714, 0.5625, 0.589285714286, 0.535714285714, 0.651785714286, 0.544642857143, 0.482142857143, 0.660714285714, 0.5,
0.696428571429, 0.696428571429, 0.616071428571, 0.625, 0.535714285714, 0.580357142857, 0.669642857143, 0.517857142857, 0.625, 0.5625,
0.553571428571, 0.544642857143, 0.473214285714, 0.526785714286, 0.526785714286, 0.5625, 0.544642857143, 0.696428571429, 0.553571428571, 0.571428571429,
0.544642857143, 0.5625, 0.616071428571, 0.571428571429, 0.535714285714, 0.607142857143, 0.517857142857, 0.625, 0.616071428571, 0.660714285714]

m1 = np.mean(tr01)
m2 = np.mean(tr02)
m3 = np.mean(tr03)
m4 = np.mean(tr04)
m5 = np.mean(tr05)
m6 = np.mean(tr06)
m7 = np.mean(tr07)
m8 = np.mean(tr08)
m9 = np.mean(tr09)


print(m5)
print(m6)

print("")
print("variances")
print("variance 0.5: ",np.var(tr05))
print("st dev 0.5: ",math.sqrt(np.var(tr05)))
print()
var1 = np.var(tr06)
print("varaince 0.6: ",var1)
print("st dev 0.6: ",math.sqrt(var1))





labels = np.arange(0.1,1,0.1)
plt.boxplot([tr01,tr02, tr03, tr04, tr05, tr06, tr07, tr08, tr09], labels=labels)
# plt.plot([1,2,3,4,5,6,7,8,9], [m1,m2,m3,m4,m5,m6,m7,m8,m9])
plt.title("Box plot to show predictive accuracies with changing threshold level")
plt.xlabel("Theshold Values")
plt.ylabel("Predictive Accuracy")

plt.show()

